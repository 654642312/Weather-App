{"version":3,"sources":["Components/Form.js","Components/WeatherInfo.js","App.js","index.js"],"names":["Form","props","className","onSubmit","getWeather","required","type","name","WeatherInfo","error","weather","humidity","temperature","wind","App","state","e","preventDefault","target","elements","country","city","countryValue","value","cityValue","Validation","test","setState","Post","countryCode","a","fetch","res","json","data","description","main","temp","speed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAsCeA,G,MAnCD,SAAAC,GACV,OACI,yBAAKC,UAAU,QACX,2CAGA,0BAAMC,SAAUF,EAAMG,YAClB,yBAAKF,UAAU,SACX,2BAAOA,UAAU,QACbG,UAAQ,EACRC,KAAK,OACLC,KAAK,YAET,2CAEA,yBAAKL,UAAU,SACX,2BAAOA,UAAU,QACbG,UAAQ,EACRC,KAAK,OACLC,KAAK,SAET,wCAER,6BACI,4BAAQD,KAAK,SAASJ,UAAU,OAC5B,4CCNTM,G,MAnBK,SAAAP,GAChB,OACI,6BAEQA,EAAMQ,OACN,yBAAKP,UAAU,YACX,2BAAID,EAAMQ,QAGlB,yBAAKP,UAAU,QACX,uCAAaD,EAAMS,SACnB,wCAAcT,EAAMU,UACpB,2CAAiBV,EAAMW,aACvB,0CAAgBX,EAAMY,UCuDvBC,E,4MA/DbC,MAAQ,CACNL,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,KAAM,GACNJ,MAAO,M,EAKTL,WAAa,SAAAY,GACXA,EAAEC,iBADc,MAEQD,EAAEE,OAAOC,SAA1BC,EAFS,EAETA,QAASC,EAFA,EAEAA,KACVC,EAAeF,EAAQG,MACvBC,EAAYH,EAAKE,MAEvB,EAAKE,WAAWH,EAAcE,I,EAKhCC,WAAa,SAACH,EAAcE,GAEvB,KAAKE,KAAKJ,IAAiB,KAAKI,KAAKF,GAEtC,EAAKG,SAAS,CACZlB,MAAO,2CAIT,EAAKkB,SAAS,CACZlB,MAAO,OAET,EAAKmB,KAAKN,EAAcE,K,EAO5BI,K,uCAAO,WAAOR,EAASS,GAAhB,iBAAAC,EAAA,sEAEaC,MAAM,qDAAD,OAAsDX,EAAtD,YAAiES,EAAjE,yDAFlB,cAECG,EAFD,gBAGcA,EAAIC,OAHlB,OAGCC,EAHD,OAKL,EAAKP,SAAS,CACZjB,QAASwB,EAAKxB,QAAQ,GAAGyB,YACzBxB,SAAUuB,EAAKE,KAAKzB,SACpBC,YAAasB,EAAKE,KAAKC,KACvBxB,KAAMqB,EAAKrB,KAAKyB,QATb,2C,+GAcL,OACE,6BACE,kBAAC,EAAD,CAAMlC,WAAYmC,KAAKnC,aACvB,kBAAC,EAAgBmC,KAAKxB,Y,GA3DZyB,aCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0b7d7a99.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Form.css';\r\n\r\nconst  Form = props  => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h1>\r\n                Weather App\r\n            </h1>\r\n            <form onSubmit={props.getWeather}>\r\n                <div className=\"group\">\r\n                    <input className=\"input\"\r\n                        required \r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                    />\r\n                    <label>Country</label>\r\n                </div>\r\n                    <div className=\"group\">\r\n                        <input className=\"input\"\r\n                            required \r\n                            type=\"text\" \r\n                            name=\"city\"\r\n                        />\r\n                        <label>City</label>\r\n                    </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn\">\r\n                        <span>\r\n                            Send\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './styles/WeatherInfo.css';\r\n\r\nconst WeatherInfo = props => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.error &&\r\n                <div className=\"card-red\">\r\n                    <p>{props.error}</p>\r\n                </div> \r\n            }\r\n            <div className=\"card\">\r\n                <p>Weather: {props.weather}</p>\r\n                <p>Humidity: {props.humidity}</p>\r\n                <p>Temperature: {props.temperature}</p>\r\n                <p>Wind Speed: {props.wind}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo","import React, { Component } from 'react';\n\n//Components\nimport Form from './Components/Form';\nimport WeatherInfo from './Components/WeatherInfo';\n\nclass App extends Component {\n\n  state = {\n    weather: '',\n    humidity: '',\n    temperature: '',\n    wind: '',\n    error: null\n  }\n\n//GET INPUTS VALUE\n\n  getWeather = e => {\n    e.preventDefault();\n    const {country, city} = e.target.elements;\n    const countryValue = country.value;\n    const cityValue = city.value;\n\n    this.Validation(countryValue, cityValue);\n  }\n\n//VALIDATION DATE\n\n  Validation = (countryValue, cityValue) => {\n\n    if(/\\s/.test(countryValue) && /\\s/.test(cityValue)){\n\n      this.setState({\n        error: 'Porfavor escribe un pais y una ciudad'\n      });\n\n    }else{\n      this.setState({\n        error: null\n      });\n      this.Post(countryValue, cityValue);       \n\n    }\n  }\n\n//REQUEST DATAS \n  \n  Post = async (country, countryCode) => {\n\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${country},${countryCode}&appid=0bbb934f3ee9fa0da639104766296e9b&units=metric`);\n    const data = await res.json();\n\n    this.setState({\n      weather: data.weather[0].description,\n      humidity: data.main.humidity,\n      temperature: data.main.temp,\n      wind: data.wind.speed\n    });\n  }\n\n  render(){\n    return (\n      <div>\n        <Form getWeather={this.getWeather}/>\n        <WeatherInfo {...this.state}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}